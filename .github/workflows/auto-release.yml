name: Auto Create Release Branch and Deploy

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Get Latest Release Branch
        id: latest_branch
        run: |
          LATEST_BRANCH=$(git branch -r | grep 'origin/release-' | sed 's|origin/release-||' | sort -n | tail -1)
          if [[ -z "$LATEST_BRANCH" ]]; then
            NEW_BRANCH="release-1"
          else
            NEW_BRANCH="release-$((LATEST_BRANCH + 1))"
          fi
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV
          echo "New branch will be: $NEW_BRANCH"

      - name: Create New Release Branch
        run: |
          git checkout main
          git pull origin main
          git checkout -b $NEW_BRANCH
          git push origin $NEW_BRANCH

            - name: Update deploy.yaml in Both Branches
        run: |
          sed -i "s/release-[0-9]\+/$NEW_BRANCH/" .github/workflows/deploy.yaml
          git add .github/workflows/deploy.yaml
          git commit -m "Update deploy.yaml for $NEW_BRANCH"
          git push origin main
          
          # Checkout new release branch and update deploy.yaml
          git checkout $NEW_BRANCH
          git cherry-pick main  # Apply the change from main
          git push origin $NEW_BRANCH

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .github/workflows/deploy.yaml
          git commit -m "Update deploy.yaml for $NEW_BRANCH"
          git push origin main

      - name: Trigger Deployment
        run: |
          gh workflow run deploy.yaml --ref $NEW_BRANCH
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
